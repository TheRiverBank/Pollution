knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(lubridate)
library(zoo)
library(scales)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(maps)
library(rvest)
library(gganimate)
library(RColorBrewer)
emision_by_sector <- read.csv("data/ghg-emissions-by-sector.csv", stringsAsFactors = FALSE)
global_primary_energy <- read.csv("data/global-primary-energy.csv", stringsAsFactors = FALSE)
primary_energy_by_source <- read.csv("data/primary-energy-consumption-by-source.csv", stringsAsFactors = FALSE)
global_temp_anomaly <- read.csv("data/temperature-anomaly.csv", stringsAsFactors = FALSE, skip = 4)
sea_surface_temp <- read.csv("data/sea-surface-temp.csv", stringsAsFactors = FALSE, skip = 6)
global_co_emission <- read.csv("data/annual-co-emissions-by-region.csv")
ambient_air_pollution_deaths <- read.csv("data/ambient-air-pollution-deaths.csv", stringsAsFactors = FALSE, skip = 2)
natural_disasters_by_type <- read.csv("data/natural-disasters-by-type.csv", stringsAsFactors = FALSE)
sea_level_rise <- read.csv("data/sea-level-rise.csv", stringsAsFactors = FALSE, skip = 5)
ice_amount <-read.csv("data/ice-amount.csv", stringsAsFactors = FALSE)
renewable_energy_investment <- read.csv("data/renewable-energy-investment.csv", stringsAsFactors = FALSE)
mitigation_curves_2.0C <- read.csv("data/mitigation_curves_2.0C.csv", stringsAsFactors = FALSE)
mitigation_curves_1.5C <- read.csv("data/mitigation_curves_1.5C.csv", stringsAsFactors = FALSE)
electricity_price_france <- read.csv("data/electricity-price-france.csv", stringsAsFactors = FALSE)
electricity_price_germany <- read.csv("data/electricity-price-germany.csv", stringsAsFactors = FALSE)
emission_summarized <- emision_by_sector %>%
group_by(Year) %>% # Get global emissions by summing emissions from each year.
summarise_at(vars(Agriculture..GHG.Emissions..CAIT.:Transport..GHG.Emissions..CAIT.), sum, na.rm=TRUE)
# Melt the data frame to get all sectors in one variable.
df_emission_by_sector <- melt(emission_summarized, id.vars = c("Year")) %>%
mutate(variable =
recode(variable,
"Agriculture..GHG.Emissions..CAIT."="Agriculture",
"Bunker.Fuels..GHG.Emissions..CAIT."="Shipping",
"Industry..GHG.Emissions..CAIT."="Industry",
"Land.Use.Change.and.Forestry..GHG.Emissions..CAIT."="Land-Use Change and Forestry",
"Waste..GHG.Emissions..CAIT."="Waste",
"Buildings..GHG.Emissions..CAIT."="Buildings",
"Electricity...Heat..GHG.Emissions..CAIT."="Electricity and Heat",
"Fugitive.from.energy.production..GHG.Emissions..CAIT."="Fugitive",
"Manufacturing.Construction.energy..GHG.Emissions..CAIT."="Manufacturing and Construction",
"Other.Fuel.Combustion..GHG.Emissions..CAIT."="Other fuel combustion",
"Transport..GHG.Emissions..CAIT."="Transport"))
# Total emissions 2016.
total_emission_2016 <- df_emission_by_sector %>%
filter(Year==2016) %>%
summarize(Totlal_Emission=sum(value, na.rm = TRUE))
# Total emission from electricity and heat in 2016.
total_electricity_2016 <- df_emission_by_sector %>%
filter(Year==2016 & variable=="Electricity and Heat") %>%
summarize(Total_Electricity=sum(value, na.rm = TRUE))
df_global_primary_energy <- melt(global_primary_energy, id.vars = "Year") %>% # Melt data frame such that all sources are in one column.
filter(Year >= 1965) %>%
mutate(variable =
recode(variable,
"Coal..TWh..direct.energy."="Coal",
"Oil..TWh..direct.energy."="Oil",
"Gas..TWh..direct.energy." = "Gas",
"Hydropower..TWh..direct.energy."="Hydropower",
"Nuclear..TWh..direct.energy."="Nuclear",
"Solar..TWh..direct.energy."="Solar",
"Other.renewables..TWh..direct.energy."="Other renewables",
"Traditional.biomass..TWh..direct.energy."="Biomass",
"Wind..TWh..direct.energy."="Wind",
"Biofuels..TWh..direct.energy." = "Biofuels")
)
# Extract the nonrenewable sources.
df_global_primary_nonrenew <- df_global_primary_energy %>%
filter(variable == c("Coal", "Oil", "Gas"))
# Extract renewable sources.
df_global_primary_renew <- df_global_primary_energy %>%
filter(variable == c("Hydropower", "Solar", "nuclear"," Other renewables", "Wind", "Nuclear"))
# Investment in renewable energy.
df_renewable_investment <- renewable_energy_investment %>%
group_by(Entity) %>%
rename("Investment"="Investment.in.Renewables.by.Region..IRENA..2016..")
# Temperature anomalies since the industrial revolution.
df_global_temp_anomaly <- global_temp_anomaly %>%
mutate(Value = replace(Value, Value == -999, NA)) # NA values are represented as -999 in original dataset.
# Anomalies in surface temperature since the industrial revolution.
df_sea_surface_temp <- sea_surface_temp %>%
select(Year, Annual.anomaly)
# Data set contains co2 emissions form each country and a 'world' variable for global co2 emission.
df_global_co_emission <- global_co_emission %>%
filter(Entity=="World" & Year >= 1880) %>%
group_by(Year) %>%
summarize(Sum_Year=sum(Annual.CO2.emissions))
# Variables are represented in the form: median [range].
pollution_deaths_2016 <- ambient_air_pollution_deaths %>%
filter(Cause=="Total") %>%
mutate(Both.sexes=as.numeric(gsub("([0-9]+) .*", "\\1", Both.sexes))) %>% # Only want median value.
summarise(Sum_Deaths=sum(Both.sexes, na.rm = TRUE))
df_natural_disasters <- natural_disasters_by_type %>%
filter(Entity==c("Wildfire", "Drought", "Extreme temperature", "Flood")) %>%
rename("Num_Disasters"=Number.of.disasters..EMDAT..2020..)
df_sea_level_rise_global <- melt(sea_level_rise, id.vars = "year") %>%
drop_na() %>%
mutate(Ocean="Global")
# Get average change in selected oceans.
get_ocean_data <- function(oceans) {
df_sea_level_rise_regional <- NULL
for (ocean in oceans) {
file_path <- paste("data/regional-sea-level/", ocean, ".csv", sep="")
file <- read.csv(file_path, stringsAsFactors = FALSE, skip = 5)
average_sea_level_change <- melt(file, id.vars = "year")
if (is.null(df_sea_level_rise_regional)) {
df_sea_level_rise_regional <- data.frame(Ocean=ocean, Average_change=average_sea_level_change)
} else {
df_temp <- data.frame(Ocean=ocean, Average_change=average_sea_level_change)
df_sea_level_rise_regional <-  rbind(df_sea_level_rise_regional, df_temp)
}
}
df_sea_level_rise_regional <- df_sea_level_rise_regional %>%
rename("year"=Average_change.year, "variable"=Average_change.variable, "value"=Average_change.value)
return(df_sea_level_rise_regional)
}
oceans <- c("Pacific-Ocean", "Atlantic-Ocean", "Indian-Ocean")
df_sea_level_by_ocean <- get_ocean_data(oceans)
df_arctic_sea_ice <- ice_amount %>%
select(c(year, extent))
df_mitigation_curves_2.0C_hist <- melt(mitigation_curves_2.0C, id.vars = "Year") %>%
filter(Year >= 1980, variable == "Historical")
df_mitigation_curves_2.0C_exclud <- melt(mitigation_curves_2.0C, id.vars = "Year") %>%
filter(Year >= 1980, variable != "Historical")
df_mitigation_curves_1.5C_hist <- melt(mitigation_curves_1.5C, id.vars = "Year") %>%
filter(Year >= 1980, variable == "Historical")
df_mitigation_curves_1.5C_exclud <- melt(mitigation_curves_1.5C, id.vars = "Year") %>%
filter(Year >= 1980, variable != "Historical")
# Scrape table from website.
URL <- "https://cambridgehouse.com/news/7971/energy-metals-the-worlds-safest-source-of-energy-will-surprise-you"
webpage <- read_html(URL)
result <- NULL
i <- 0
for (i in 1:7) {
source_node <- sprintf("tr:nth-child(%s) td:nth-child(1)", i)
source_name <- webpage %>% html_nodes(source_node) %>% html_text() # Energy source value
death_node <- sprintf("tr:nth-child(%s) td:nth-child(2)", i)
death_num <- webpage %>% html_nodes(death_node) %>% html_text() # Deaths by source
result <- rbind(result, c(source_name, death_num))
}
df_deaths_by_source <- as.data.frame(result, stringsAsFactors = FALSE) %>%
rename("Source" = V1, "Deaths_Per_1000_TWh" = V2) %>%
mutate(Deaths_Per_1000_TWh = as.numeric(gsub(",", "", Deaths_Per_1000_TWh)))
df_deaths_by_source
# Remove quarter and calculate mean price each year.
clean_price_data <- function(data) {
df_electricity_price_france <- data %>%
select(TIME, Value) %>%
mutate(TIME = gsub("S.*", "", TIME), Value = as.numeric(Value)) %>%
group_by(TIME) %>%
summarise(Value = mean(Value, na.rm=TRUE))
}
df_electricity_price_france <- clean_price_data(electricity_price_france)
df_electricity_price_germany <- clean_price_data(electricity_price_germany)
# Scrape countries share of electricity sources.
scrape_electricity <- function(URL) {
webpage <- read_html(URL)
result <- NULL
i <- 0
for (i in 2:7) {
source_node <- sprintf("tr:nth-child(%s) td:nth-child(1)", i)
source_name <- webpage %>% html_nodes(source_node) %>% html_text()
source_name <- gsub("[\r\n\t]", "", source_name) # Remove unwanted charachters
value_node <- sprintf("tr:nth-child(%s) td:nth-child(2)", i)
value <- webpage %>% html_nodes(value_node) %>% html_text()
value <- gsub("[\r\n\t]", "", value)
result <- rbind(result, c(source_name, value))
}
df <- as.data.frame(result, stringsAsFactors = FALSE) %>%
rename("Energy_Source" = V1, "Perc_Of_Total" = V2) %>%
mutate(Perc_Of_Total=as.numeric(Perc_Of_Total))
return(df)
}
df_electricity_sources_france <- scrape_electricity("https://www.globalpetrolprices.com/energy_mix.php?countryId=194")
df_electricity_sources_germany <- scrape_electricity("https://www.globalpetrolprices.com/energy_mix.php?countryId=195")
# Combine coutries into one data frame.
df_electricity_sources_combined <- cbind(France = df_electricity_sources_france, Germany = df_electricity_sources_germany$Perc_Of_Total) %>%
rename("Energy_Source" = France.Energy_Source, "France" = France.Perc_Of_Total)
df_electricity_sources_combined <- melt(df_electricity_sources_combined, id.vars="Energy_Source")
pltTheme <- theme_light() + theme(plot.title = element_text(hjust = 0.5))
ggplot(df_emission_by_sector, aes(Year, value, col=variable)) +
labs(y="Million tonnes", title="Emission by sector in million tonnes carbon dioxide-equivalents", colour="Sector") +
pltTheme +
geom_line()
ggplot(df_global_primary_energy, aes(Year, value, col=variable)) +
labs(y="TWh", title="Global primary energy sources.", colour="Source") +
pltTheme +
geom_line()
ggplot(df_global_primary_energy, aes(Year, value, fill=variable)) +
labs(y="TWh", title="Global primary energy sources.", colour="Source") +
pltTheme +
geom_area(position = "stack")
plt_emission <- ggplot(df_global_co_emission, aes(x=Year, y=Sum_Year)) +
geom_line(color="red") +
labs(y="Co2 emission in milion tonnes") +
pltTheme
plt_temperature_land <- ggplot(df_global_temp_anomaly, aes(x=Year, y=Value)) +
geom_line(color="blue") +
labs(y="Temperature land") +
pltTheme
plt_temperature_sea <- ggplot(df_sea_surface_temp, aes(x=Year, y=Annual.anomaly)) +
geom_line(color="green") +
labs(y="Temperature sea surface") +
pltTheme
grid.arrange(plt_emission, plt_temperature_land, plt_temperature_sea, nrow=3)
ggplot(df_natural_disasters, aes(x=Year, y=Num_Disasters, fill=Entity)) +
labs(y="Value", title="Number of natural disasters.") +
geom_col() +
pltTheme +
theme(legend.position = "none") +
facet_wrap(~Entity, scales = "free_y")
ggplot(df_arctic_sea_ice, aes(x=year, y=extent)) +
labs(y="Million square km.") +
pltTheme +
geom_line()
ggplot(data=df_sea_level_by_ocean, aes(x=year, y=value, color=variable)) +
geom_line(data=df_sea_level_rise_global) +
geom_line() +
geom_smooth() +
labs(y="Millimeters", title="Change is sea level.", colour="Altimeter") +
scale_x_continuous(breaks = seq(1992, 2020, by=5)) +
pltTheme +
facet_wrap(~Ocean)
plt_renew <- ggplot(df_global_primary_renew, aes(Year, value, col=variable)) +
labs(y="TWh", title="comsumption of renewable energy.", colour="Renewable sources") +
pltTheme +
geom_line()
plt_nonrenew <- ggplot(df_global_primary_nonrenew, aes(Year, value, col=variable)) +
labs(y="TWh", title="Consumption of nonrenewable energy.", color="Nonrenewable sources") +
pltTheme +
geom_line()
grid.arrange(plt_renew, plt_nonrenew, ncol=2)
ggplot(df_deaths_by_source, aes(x = Source, y = Deaths_Per_1000_TWh, fill = Source)) +
labs(y="Deaths", x="Energy source", title="Deaths per 1,000 TWh by energy source")+
pltTheme +
theme(legend.position = 0) +
geom_col()
ggplot() +
geom_col(data=df_electricity_price_germany, aes(x=TIME, y=Value, fill="Germany")) +
geom_col(data=df_electricity_price_france, aes(x=TIME, y=Value, fill="France")) +
labs(x="Year", y="Price €", colour="Country", title="Electricity cost per KWh") +
pltTheme
ggplot(df_electricity_sources_combined, aes(x="", y=value, fill=Energy_Source)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
labs(title="share of total electricity generation by source", fill="Energy source") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~variable)
ggplot(df_renewable_investment, aes(x=Year, y=Investment, colour=Entity)) +
labs(y="Investment in billion USD.") +
pltTheme +
geom_line()
